name: CT - Monitor and Retrain Model

on:
  schedule:
    - cron: '0 * * * *'  # every hour
  workflow_dispatch:

jobs:
  monitor-and-retrain:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Use system Python
        run: |
          echo "Using system Python"
          python3 --version
          which python3

      - name: Set up venv and install dependencies
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run monitoring script
        run: |
          source venv/bin/activate
          python monitor.py

      - name: Check if retrained model exists
        id: check_model
        run: |
          echo "Checking for retrained model..."
          MODEL_TAG=$(ls burnout_model_v*.pkl 2>/dev/null | tail -n 1 | sed 's/\.pkl//')
          echo "model_tag=$MODEL_TAG" >> $GITHUB_OUTPUT

      - name: Build and Push New Docker Image
        if: steps.check_model.outputs.model_tag != ''
        env:
          DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
          DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
        run: |
          source venv/bin/activate
          export TAG=${{ steps.check_model.outputs.model_tag }}
          cp $TAG.pkl burnout_model.pkl
          docker build -t $DOCKER_HUB_USERNAME/burnout-api:$TAG .
          echo $DOCKER_HUB_TOKEN | docker login -u $DOCKER_HUB_USERNAME --password-stdin
          docker push $DOCKER_HUB_USERNAME/burnout-api:$TAG

